{"version":3,"sources":["components/atoms/StyledHeader/StyledHeader.js","theme/GlobalStyle.js","theme/mainTheme.js","actions/index.js","reducers/listReducer.js","reducers/index.js","store/index.js","components/organisms/TrelloList.js","components/organisms/TrelloActionButton.js","components/organisms/TrelloCard.js","components/App.js","index.js","assets/images/ravenna_@2X.png"],"names":["StyledHeader","styled","header","_templateObject","_ref","theme","lightGreen","_ref2","fontSize","xl","GlobalStyle","createGlobalStyle","GlobalStyle_templateObject","background","light","bold","xxs","xs","s","m","l","addListItem","cardID","text","type","payload","addCard","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","listID","initialState","title","id","concat","cards","done","listReducer","state","arguments","length","undefined","action","newCard","Object","toConsumableArray","newList","map","list","objectSpread","_action$payload","newState","splice","apply","_list$cards","find","card","_listEnd$cards","filter","item","goodArray","toggledArray","console","log","combineReducers","lists","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","TrelloList","index","react_default","a","createElement","react_beautiful_dnd_esm","String","provided","assign","ref","innerRef","draggableProps","dragHandleProps","InputGroup","className","Prepend","Button","onClick","dispatch","doneTask","variant","react_textarea_autosize_esm_browser","autoFocus","value","disabled","style","resize","outline","border","marginTop","width","height","textDecoration","Append","removeItem","TrelloActionButton","formOpen","openForm","_this","setState","closeForm","e","handleInputChange","target","handleAddListItem","_this$props","props","handleAddCard","renderAddButton","bWidth","Button_Button","minWidth","boxShadow","Icon","renderForm","Card","minHeight","onBlur","placeholder","onChange","display","alignItems","onMouseDown","color","backgroundColor","marginLeft","cursor","this","React","Component","connect","StyledTrelloCardWrapper","div","TrelloCard_templateObject","StyledCardHeaderWrapper","_templateObject2","TrelloCard","droppableId","droppableProps","removeCard","es_Card","bg","Header","organisms_TrelloList","organisms_TrelloActionButton","StyledWrapper","App_templateObject","App","onDragEnd","result","destination","source","theme_GlobalStyle","styled_components_browser_esm","Fragment","StyledHeader_StyledHeader","direction","organisms_TrelloCard","ReactDOM","render","es","components_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.14820c33.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst StyledHeader = styled.header`\r\n  background-color: ${({ theme }) => theme.lightGreen};\r\n  font-family: \"Merienda One\", cursive;\r\n  color: #009f85;\r\n  font-size: ${({ theme }) => theme.fontSize.xl};\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  font-style: oblique;\r\n`;\r\n\r\nexport default StyledHeader;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n/* Background pattern from Toptal Subtle Patterns */\r\nimport background from \"assets/images/ravenna_@2X.png\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  @import url(\"https://fonts.googleapis.com/css?family=Montserrat:300,600\");\r\n  @import url(\"https://fonts.googleapis.com/css?family=Merienda+One&display=swap\");\r\n\r\n  *, *::before, *::after{\r\n    box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  html{\r\n    font-size: 62.5%;\r\n    margin: 0;\r\n  }\r\n\r\n  body{\r\n    font-family: \"Montserrat\", sans-serif;\r\n    background: url(${background});\r\n    font-size: 1.6rem;\r\n    margin: 0;\r\n    height: 100vh;\r\n  }\r\n\r\n  #root{\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export const theme = {\r\n  lightGreen: \"hsl(106, 47%, 64%)\",\r\n  light: 300,\r\n  bold: 600,\r\n  fontSize: {\r\n    xxs: \"1rem\",\r\n    xs: \"1.2rem\",\r\n    s: \"1.6rem\",\r\n    m: \"2.1rem\",\r\n    l: \"2.4rem\",\r\n    xl: \"4rem\"\r\n  }\r\n};\r\n","export const ADD_CARD = \"ADD_CARD\";\r\nexport const ADD_LIST_ITEM = \"ADD_LIST_ITEM\";\r\nexport const DRAG_HAPPEND = \"DRAG_HAPPEND\";\r\nexport const REMOVE_CARD = \"REMOVE_CARD\";\r\nexport const REMOVE_ITEM = \"REMOVE_ITEM\";\r\nexport const DONE = \"DONE\";\r\n\r\nexport const addListItem = (cardID, text) => {\r\n  return {\r\n    type: ADD_LIST_ITEM,\r\n    payload: { cardID, text }\r\n  };\r\n};\r\n\r\nexport const addCard = text => {\r\n  return {\r\n    type: ADD_CARD,\r\n    payload: text\r\n  };\r\n};\r\n\r\nexport const removeCard = cardID => {\r\n  return {\r\n    type: REMOVE_CARD,\r\n    payload: cardID\r\n  };\r\n};\r\n\r\nexport const removeItem = (listID, cardID, title) => {\r\n  return {\r\n    type: REMOVE_ITEM,\r\n    payload: { listID, cardID, title }\r\n  };\r\n};\r\n\r\nexport const doneTask = (listID, cardID, title) => {\r\n  return {\r\n    type: DONE,\r\n    payload: { listID, cardID, title }\r\n  };\r\n};\r\n\r\nexport const sort = (\r\n  droppableIdStart,\r\n  droppableIdEnd,\r\n  droppableIndexStart,\r\n  droppableIndexEnd,\r\n  draggableId,\r\n  type\r\n) => {\r\n  return {\r\n    type: DRAG_HAPPEND,\r\n    payload: {\r\n      droppableIdStart,\r\n      droppableIdEnd,\r\n      droppableIndexStart,\r\n      droppableIndexEnd,\r\n      draggableId,\r\n      type\r\n    }\r\n  };\r\n};\r\n","import {\r\n  ADD_CARD,\r\n  ADD_LIST_ITEM,\r\n  DRAG_HAPPEND,\r\n  REMOVE_CARD,\r\n  REMOVE_ITEM,\r\n  DONE\r\n} from \"actions\";\r\n\r\nlet cardID = 1;\r\nlet listID = 3;\r\n\r\nconst listReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_CARD: {\r\n      const newCard = {\r\n        title: action.payload,\r\n        id: `card-${cardID}`,\r\n        cards: []\r\n      };\r\n      cardID += 1;\r\n      return [...state, newCard];\r\n    }\r\n\r\n    case ADD_LIST_ITEM: {\r\n      const newList = {\r\n        text: action.payload.text,\r\n        done: false,\r\n        id: `list-${listID}`\r\n      };\r\n      listID += 1;\r\n      const newState = state.map(list => {\r\n        if (list.id === action.payload.cardID) {\r\n          return {\r\n            ...list,\r\n            cards: [...list.cards, newList]\r\n          };\r\n        } else {\r\n          return list;\r\n        }\r\n      });\r\n      return newState;\r\n    }\r\n\r\n    case DRAG_HAPPEND:\r\n      const {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexStart,\r\n        droppableIndexEnd,\r\n        type\r\n      } = action.payload;\r\n\r\n      const newState = [...state];\r\n\r\n      if (type === \"card\") {\r\n        const list = newState.splice(droppableIndexStart, 1);\r\n        newState.splice(droppableIndexEnd, 0, ...list);\r\n        return newState;\r\n      }\r\n\r\n      if (droppableIdStart === droppableIdEnd) {\r\n        const list = state.find(list => droppableIdStart === list.id);\r\n        const card = list.cards.splice(droppableIndexStart, 1);\r\n        list.cards.splice(droppableIndexEnd, 0, ...card);\r\n      }\r\n\r\n      if (droppableIdStart !== droppableIdEnd) {\r\n        const listStart = state.find(list => droppableIdStart === list.id);\r\n        const card = listStart.cards.splice(droppableIndexStart, 1);\r\n        const listEnd = state.find(list => droppableIdEnd === list.id);\r\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\r\n      }\r\n\r\n      return newState;\r\n\r\n    case REMOVE_CARD:\r\n      return state.filter(item => {\r\n        return item.id !== action.payload;\r\n      });\r\n\r\n    case REMOVE_ITEM: {\r\n      const findCard = state.find(item => {\r\n        return item.title === action.payload.title;\r\n      });\r\n      const goodArray = findCard.cards.filter(item => {\r\n        return item.id !== action.payload.listID;\r\n      });\r\n      return state.map(item => {\r\n        if (item.id === action.payload.cardID) {\r\n          return {\r\n            ...item,\r\n            cards: goodArray\r\n          };\r\n        }\r\n        return item;\r\n      });\r\n    }\r\n\r\n    case DONE: {\r\n      const cardToChange = state.find(item => {\r\n        return item.title === action.payload.title;\r\n      });\r\n\r\n      const toggledArray = cardToChange.cards.filter(item => {\r\n        if (item.id === action.payload.listID) {\r\n          return (item.done = !item.done);\r\n        }\r\n        return item;\r\n      });\r\n      console.log(\"toggledArray\", toggledArray);\r\n      return state.map(item => {\r\n        if (item.id === action.payload.cardID) {\r\n          return {\r\n            ...item,\r\n            cards: toggledArray\r\n          };\r\n        }\r\n        return item;\r\n      });\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = [\r\n  {\r\n    title: \"EXAMPLE TITLE\",\r\n    id: `card-${0}`,\r\n    cards: [\r\n      {\r\n        id: `list-${0}`,\r\n        text: \"lorem ipsum #1\",\r\n        done: false\r\n      },\r\n      {\r\n        id: `list-${1}`,\r\n        text: \"LOREM IPSUM #2\",\r\n        done: false\r\n      },\r\n      {\r\n        id: `list-${2}`,\r\n        text: \"LOREM IPSUM #3\",\r\n        done: false\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default listReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport listReducer from \"./listReducer\";\r\n\r\nexport default combineReducers({\r\n  lists: listReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport TextArea from \"react-textarea-autosize\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { InputGroup, Button } from \"react-bootstrap\";\r\nimport { removeItem, doneTask } from \"actions\";\r\nimport store from \"store\";\r\n\r\nconst TrelloList = ({ text, index, listID, cardID, title, done }) => {\r\n  return (\r\n    <Draggable draggableId={String(listID)} index={index}>\r\n      {provided => (\r\n        <div\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <InputGroup className=\"d-flex justify-content-between mt-3\">\r\n            <InputGroup.Prepend>\r\n              <Button\r\n                onClick={() => store.dispatch(doneTask(listID, cardID, title))}\r\n                className=\"m-0\"\r\n                variant={done ? \"success\" : \"secondary\"}\r\n              >\r\n                <i className={done ? \"fa fa-check\" : \"fa fa-square\"} />\r\n              </Button>\r\n            </InputGroup.Prepend>\r\n\r\n            <TextArea\r\n              autoFocus\r\n              value={text}\r\n              disabled\r\n              style={{\r\n                resize: \"none\",\r\n                outline: \"none\",\r\n                border: \"none\",\r\n                fontSize: \"14px\",\r\n                marginTop: \"2px\",\r\n                width: \"235px\",\r\n                height: \"auto\",\r\n                textDecoration: `${done ? \"line-through\" : \"none\"}`\r\n              }}\r\n            />\r\n\r\n            <InputGroup.Append>\r\n              <Button\r\n                className=\"m-0\"\r\n                variant=\"danger\"\r\n                onClick={() =>\r\n                  store.dispatch(removeItem(listID, cardID, title))\r\n                }\r\n              >\r\n                <i className=\"fa fa-times\" />\r\n              </Button>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default TrelloList;\r\n","import React from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport TextArea from \"react-textarea-autosize\";\r\nimport { connect } from \"react-redux\";\r\nimport { addListItem, addCard } from \"actions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass TrelloActionButton extends React.Component {\r\n  state = {\r\n    formOpen: false,\r\n    text: \"\"\r\n  };\r\n\r\n  openForm = () => {\r\n    this.setState({\r\n      formOpen: true\r\n    });\r\n  };\r\n  closeForm = e => {\r\n    this.setState({\r\n      formOpen: false\r\n    });\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      text: e.target.value\r\n    });\r\n  };\r\n\r\n  handleAddListItem = () => {\r\n    const { dispatch, cardID } = this.props;\r\n    const { text } = this.state;\r\n    if (text) {\r\n      this.setState({\r\n        text: \"\"\r\n      });\r\n      dispatch(addListItem(cardID, text));\r\n    }\r\n    return;\r\n  };\r\n  handleAddCard = () => {\r\n    const { dispatch } = this.props;\r\n    const { text } = this.state;\r\n\r\n    if (text) {\r\n      this.setState({\r\n        text: \"\"\r\n      });\r\n      dispatch(addCard(text));\r\n    }\r\n    return;\r\n  };\r\n\r\n  renderAddButton = () => {\r\n    const { list } = this.props;\r\n    const bWidth = list ? \"200px\" : \"100%\";\r\n    return (\r\n      <Button\r\n        variant=\"contained\"\r\n        style={{ height: \"50px\", marginTop: \"20px\", minWidth: bWidth }}\r\n        onClick={this.openForm}\r\n        boxShadow={3}\r\n      >\r\n        <Icon>add</Icon>\r\n        {list ? \"Add another card\" : \"Add another item\"}\r\n        <Icon>add</Icon>\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  renderForm = () => {\r\n    const { list } = this.props;\r\n    return (\r\n      <div>\r\n        <Card style={{ marginTop: \"20px\", minHeight: 80 }}>\r\n          <TextArea\r\n            autoFocus\r\n            onBlur={this.closeForm}\r\n            value={this.state.text}\r\n            placeholder={\r\n              list ? \"Enter list title...\" : \"Enter a content for this card...\"\r\n            }\r\n            onChange={this.handleInputChange}\r\n            style={{\r\n              resize: \"none\",\r\n              outline: \"none\",\r\n              border: \"none\",\r\n              height: \"700px\",\r\n              fontSize: \"14px\",\r\n              minWidth: `${!list ? \"100%\" : \"200px\"}`\r\n            }}\r\n          />\r\n        </Card>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Button\r\n            onMouseDown={list ? this.handleAddCard : this.handleAddListItem}\r\n            variant=\"contained\"\r\n            style={{ color: \"white\", backgroundColor: \"#5aac44\" }}\r\n          >\r\n            {list ? \"Add Card\" : \"Add List Item\"}\r\n          </Button>\r\n          <Icon style={{ marginLeft: 8, cursor: \"pointer\" }}>close</Icon>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    return this.state.formOpen ? this.renderForm() : this.renderAddButton();\r\n  }\r\n}\r\n\r\nconst mapState = state => ({});\r\n\r\nexport default connect(mapState)(TrelloActionButton);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TrelloList from \"./TrelloList\";\r\nimport TrelloActionButton from \"components/organisms/TrelloActionButton\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport store from \"store\";\r\nimport { removeCard } from \"actions\";\r\n\r\nconst StyledTrelloCardWrapper = styled.div`\r\n  background: #f8d353;\r\n  background: linear-gradient(to bottom right, #f8d353, #ff5c5a);\r\n  border-radius: 5px;\r\n  max-width: 350px;\r\n  min-width: 350px;\r\n  margin-top: 20px;\r\n  margin-left: 20px;\r\n  display: table;\r\n  padding: 8px;\r\n\r\n  .card {\r\n    font-size: ${({ theme }) => theme.fontSize.s};\r\n    text-transform: uppercase;\r\n    word-break: break-all;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst StyledCardHeaderWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst TrelloCard = ({ title, cards, cardID, index }) => {\r\n  return (\r\n    <Draggable draggableId={String(cardID)} index={index}>\r\n      {provided => (\r\n        <StyledTrelloCardWrapper\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <Droppable droppableId={String(cardID)}>\r\n            {provided => (\r\n              <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                <StyledCardHeaderWrapper>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={() => store.dispatch(removeCard(cardID))}\r\n                  >\r\n                    <i className=\"fa fa-times\" />\r\n                  </Button>\r\n                  <Card bg=\"info\" text=\"white\" style={{ width: \"100%\" }}>\r\n                    <Card.Header>{title}</Card.Header>\r\n                  </Card>\r\n                </StyledCardHeaderWrapper>\r\n\r\n                {cards.map((card, index) => (\r\n                  <TrelloList\r\n                    index={index}\r\n                    text={card.text}\r\n                    listID={card.id}\r\n                    cardID={cardID}\r\n                    title={title}\r\n                    done={card.done}\r\n                  />\r\n                ))}\r\n\r\n                {provided.placeholder}\r\n                <TrelloActionButton cardID={cardID} />\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </StyledTrelloCardWrapper>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default TrelloCard;\r\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport StyledHeader from \"components/atoms/StyledHeader/StyledHeader\";\nimport GlobalStyle from \"theme/GlobalStyle\";\nimport { ThemeProvider } from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { theme } from \"theme/mainTheme\";\nimport TrelloCard from \"components/organisms/TrelloCard\";\nimport TrelloActionButton from \"components/organisms/TrelloActionButton\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { sort } from \"actions\";\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  overflow: auto;\n  height: 100%;\n`;\n\nclass App extends Component {\n  onDragEnd = result => {\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId,\n        type\n      )\n    );\n  };\n\n  render() {\n    const { lists } = this.props;\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <GlobalStyle />\n        <ThemeProvider theme={theme}>\n          <>\n            <StyledHeader>trello clone</StyledHeader>\n            <Droppable\n              droppableId=\"all-lists\"\n              direction=\"horizontal\"\n              type=\"card\"\n            >\n              {provided => (\n                <StyledWrapper\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                >\n                  <TrelloActionButton list />\n\n                  {lists.map((list, index) => (\n                    <TrelloCard\n                      cardID={list.id}\n                      title={list.title}\n                      cards={list.cards}\n                      index={index}\n                    />\n                  ))}\n                  {provided.placeholder}\n                </StyledWrapper>\n              )}\n            </Droppable>\n          </>\n        </ThemeProvider>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapState = state => ({\n  lists: state.lists\n});\n\nexport default connect(mapState)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"store\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/ravenna_@2X.9fb7ebd0.png\";"],"sourceRoot":""}